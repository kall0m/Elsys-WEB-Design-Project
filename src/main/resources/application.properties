# MYSQL DATABASE
# Database connection with the given database name
#spring.datasource.url = jdbc:mysql://localhost:3306/health_blog?createDatabaseIfNotExist=true&useSSL=false&useUnicode=yes&characterEncoding=UTF-8
#spring.datasource.connectionProperties = useUnicode=true;characterEncoding=utf-8;

# Username and password
#spring.datasource.username = root
#spring.datasource.password =

# POSTGRESQL DATABASE
# Database connection with the given database name
spring.datasource.url = jdbc:postgresql://ec2-79-125-117-53.eu-west-1.compute.amazonaws.com:5432/dc1rjmvq7dalmv?user=keppitxfqlqmzp&password=fee4d36cb76dbd68d2d113ff61d2dd88951659c3989aed6a2e7ae4e828a2c1c2&sslmode=require

spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
# Using "create" will delete and recreate the tables every time the project is started
spring.jpa.hibernate.ddl-auto = create

# Naming strategy
spring.jpa.hibernate.naming.strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

#Turn off Thymeleaf cache
spring.thymeleaf.cache = false

#File size
spring.http.multipart.max-file-size=100MB
spring.http.multipart.max-request-size=100MB

#Postgresql
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.maxActive=10
spring.datasource.maxIdle=5
spring.datasource.minIdle=2
spring.datasource.initialSize=5
spring.datasource.removeAbandoned=true